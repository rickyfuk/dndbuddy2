'use strict';
const date = new Date();

const inputData = [
	['Acid Splash', 'Wizard', 0, '1 Action', '1d6'],
	['Blade Ward', 'Wizard', 0, '1 Action', ''],
	['Chill Touch', 'Wizard', 0, '1 Action', '1d8'],
	['Dancing Lights', 'Wizard', 0, '1 Action', ''],
	['Fire Bolt', 'Wizard', 0, '1 Action', '1d10'],
	['Friends', 'Wizard', 0, '1 Action', ''],
	['Light', 'Wizard', 0, '1 Action', ''],
	['Mage Hand', 'Wizard', 0, '1 Action', ''],
	['Mending', 'Wizard', 0, '1 Minute', ''],
	['Message', 'Wizard', 0, '1 Action', ''],
	['Minor Illusion', 'Wizard', 0, '1 Action', ''],
	['Poison Spray', 'Wizard', 0, '1 Action', '1d12'],
	['Prestidigitation', 'Wizard', 0, '1 Action', ''],
	['Ray of Frost', 'Wizard', 0, '1 Action', '1d8'],
	['Shocking Grasp', 'Wizard', 0, '1 Action', '1d8'],
	['True Strike', 'Wizard', 0, '1 Action', ''],
	['Alarm (Ritual)', 'Wizard', 1, '1 Minute', ''],
	['Burning Hands', 'Wizard', 1, '1 Action', '3d6'],
	['Charm Person', 'Wizard', 1, '1 Action', ''],
	['Chromatic Orb', 'Wizard', 1, '1 Action', ''],
	['Color Spray', 'Wizard', 1, '1 Action', ''],
	['Comprehend Languages (Ritual)', 'Wizard', 1, '1 Action', ''],
	['Detect Magic (Ritual)', 'Wizard', 1, '1 Action', ''],
	['Disguise Self', 'Wizard', 1, '1 Action', ''],
	['Expeditious Retreat', 'Wizard', 1, '1 Bonus Action', ''],
	['False Life', 'Wizard', 1, '1 Action', ''],
	['Feather Fall', 'Wizard', 1, 'Special', ''],
	['Find Familiar (Ritual)', 'Wizard', 1, '1 Hour', ''],
	['Fog Cloud', 'Wizard', 1, '1 Action', ''],
	['Grease', 'Wizard', 1, '1 Action', ''],
	['Identify (Ritual)', 'Wizard', 1, '1 Minute', ''],
	['Illusory Script (Ritual)', 'Wizard', 1, '1 Minute', ''],
	['Jump', 'Wizard', 1, '1 Action', ''],
	['Longstrider', 'Wizard', 1, '1 Action', ''],
	['Mage Armor', 'Wizard', 1, '1 Action', ''],
	['Magic Missile', 'Wizard', 1, '1 Action', '3 x 1d4+1'],
	['Protection from Evil and Good', 'Wizard', 1, '1 Action', ''],
	['Ray of Sickness', 'Wizard', 1, '1 Action', '2d8'],
	['Shield', 'Wizard', 1, 'Special', ''],
	['Silent Image', 'Wizard', 1, '1 Action', ''],
	['Sleep', 'Wizard', 1, '1 Action', ''],
	['Tasha’s Hideous Laughter', 'Wizard', 1, '1 Action', ''],
	['Tenser’s Floating Disk (Ritual)', 'Wizard', 1, '1 Action', ''],
	['Thunderwave', 'Wizard', 1, '1 Action', '2d8'],
	['Unseen Servant (Ritual)', 'Wizard', 1, '1 Action', ''],
	['Witch Bolt', 'Wizard', 1, '1 Action', '1d12'],

	['Blade Ward', 'Bard', 0, '1 Action', ''],
	['Dancing Lights', 'Bard', 0, '1 Action', ''],
	['Friends', 'Bard', 0, '1 Action', ''],
	['Light', 'Bard', 0, '1 Action', ''],
	['Mage Hand', 'Bard', 0, '1 Action', ''],
	['Mending', 'Bard', 0, '1 Minute', ''],
	['Message', 'Bard', 0, '1 Action', ''],
	['Minor Illusion', 'Bard', 0, '1 Action', ''],
	['Prestidigitation', 'Bard', 0, '1 Action', ''],
	['True Strike', 'Bard', 0, '1 Action', ''],
	['Vicious Mockery', 'Bard', 0, '1 Action', '1d4'],
	['Animal Friendship', 'Bard', 1, '1 Action', ''],
	['Bane', 'Bard', 1, '1 Action', ''],
	['Charm Person', 'Bard', 1, '1 Action', ''],
	['Comprehend Languages (Ritual)', 'Bard', 1, '1 Action', ''],
	['Cure Wounds', 'Bard', 1, '1 Action', ''],
	['Detect Magic (Ritual)', 'Bard', 1, '1 Action', ''],
	['Disguise Self', 'Bard', 1, '1 Action', ''],
	['Dissonant Whispers', 'Bard', 1, '1 Action', '3d6'],
	['Faerie Fire', 'Bard', 1, '1 Action', ''],
	['Feather Fall', 'Bard', 1, 'Special', ''],
	['Healing Word', 'Bard', 1, '1 Bonus Action', ''],
	['Heroism', 'Bard', 1, '1 Action', ''],
	['Identify (Ritual)', 'Bard', 1, '1 Minute', ''],
	['Illusory Script (Ritual)', 'Bard', 1, '1 Minute', ''],
	['Longstrider', 'Bard', 1, '1 Action', ''],
	['Silent Image', 'Bard', 1, '1 Action', ''],
	['Sleep', 'Bard', 1, '1 Action', ''],
	['Speak With Animals (Ritual)', 'Bard', 1, '1 Action', ''],
	['Tasha’s Hideous Laughter', 'Bard', 1, '1 Action', ''],
	['Thunderwave', 'Bard', 1, '1 Action', '2d8'],
	['Unseen Servant (Ritual)', 'Bard', 1, '1 Action', ''],

	['Guidance', 'Cleric', 0, '1 Action', ''],
	['Light', 'Cleric', 0, '1 Action', ''],
	['Mending', 'Cleric', 0, '1 Minute', ''],
	['Resistance', 'Cleric', 0, '1 Action', ''],
	['Sacred Flame', 'Cleric', 0, '1 Action', ''],
	['Spare The Dying', 'Cleric', 0, '1 Action', ''],
	['Thaumaturgy', 'Cleric', 0, '1 Action', ''],
	['Bane', 'Cleric', 1, '1 Action', ''],
	['Bless', 'Cleric', 1, '1 Action', ''],
	['Command', 'Cleric', 1, '1 Action', ''],
	['Create or Destroy Water', 'Cleric', 1, '1 Action', ''],
	['Cure Wounds', 'Cleric', 1, '1 Action', ''],
	['Detect Evil and Good', 'Cleric', 1, '1 Action', ''],
	['Detect Magic (Ritual)', 'Cleric', 1, '1 Action', ''],
	['Detect Poison and Disease (Ritual)', 'Cleric', 1, '1 Action', ''],
	['Guiding Bolt', 'Cleric', 1, '1 Action', '4d6'],
	['Healing Word', 'Cleric', 1, '1 Bonus Action', ''],
	['Inflict Wounds', 'Cleric', 1, '1 Action', '3d10'],
	['Protection from Evil and Good (Ritual)', 'Cleric', 1, '1 Action', ''],
	['Purify Food and Drink (Ritual)', 'Cleric', 1, '1 Action', ''],
	['Sanctuary', 'Cleric', 1, '1 Bonus Action', ''],
	['Shield of Faith', 'Cleric', 1, '1 Bonus Action', ''],

	['Alarm', 'Ranger', 1, '1 Minute', ''],
	['Animal Friendship', 'Ranger', 1, '1 Action', ''],
	['Cure Wounds', 'Ranger', 1, '1 Action', ''],
	['Detect Magic (Ritual)', 'Ranger', 1, '1 Action', ''],
	['Detect Poison and Disease (Ritual)', 'Ranger', 1, '1 Action', ''],
	['Ensnaring Strike', 'Ranger', 1, '1 Bonus Action', '1d6'],
	['Fog Cloud', 'Ranger', 1, '1 Action', ''],
	['Goodberry', 'Ranger', 1, '1 Action', ''],
	['Hail of Thorns', 'Ranger', 1, '1 Bonus Action', '1d10'],
	['Hunter’s Mark', 'Ranger', 1, '1 Bonus Action', '1d6'],
	['Jump', 'Ranger', 1, '1 Action', ''],
	['Longstrider', 'Ranger', 1, '1 Action', ''],
	['Speak With Animals (Ritual)', 'Ranger', 1, '1 Action', ''],
];

module.exports = {
	up: async (queryInterface, Sequelize) => {
		const inputarray = [];
		for (let i = 0; i < inputData.length; i++) {
			inputarray.push({
				name: inputData[i][0],
				casting_class: inputData[i][1],
				casting_level: inputData[i][2],
				casting_time: inputData[i][3],
				damage_dice: inputData[i][4],
				created_at: date,
				updated_at: date,
			});
		}

		await queryInterface.bulkInsert('charSpell', inputarray, {
			validate: true,
			ignoreDuplicates: true,
		});
	},

	down: async (queryInterface, Sequelize) => {
		await queryInterface.bulkDelete('charSpell', null, {});
	},
};
